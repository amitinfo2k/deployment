---
 - setup:
   register: host_facts
 - set_fact:
     temp_var: "{{ ansible_interfaces|sort }}"
 - set_fact:
     S1MME_DEV: "ansible_{{ temp_var[3] }}"
 
 - name: Installing Packages 
   apt: 
      name: "{{ packages }}"
   vars: 
      packages: 
         - git
         - build-essential
         - cmake
         - libuv-dev
         - libgcrypt-dev
         - libidn11-dev
         - bison
         - libsctp-dev
         - flex
         - libgnutls-dev
         - libssl-dev

 - name: Git clone for C3PO
   git:
      repo: "{{ MME_REPO }}"
      dest: "{{ MME_REPO_DIR }}"
      version: "{{ MME_COMMIT_ID }}"
      update: no
 
 - name: Create modules directory 
   file: 
      path: "{{ MME_REPO_DIR }}/modules"
      state: directory 
 
 - name: git clone FreeDiameter repo 
   git: 
      repo: "{{ FREEDIAMETER_REPO }}" 
      dest: "{{ FREEDIAMETER_DIR }}"
      update: no 

 - name: Create FreeDiameter build directory   
   file:
      path: "{{ FREEDIAMETER_DIR }}/build"
      state: directory 
 
 - name: Build FreeDiameter    
   shell: "cmake -DDISABLE_SCTP:BOOL=ON .. && make -j && make install |tee /var/log/freediameter.log"
   args:
      chdir: "{{ FREEDIAMETER_DIR }}/build"
      executable: /bin/bash    

 - name: Build Openmme
   shell: make clean && make && make install |tee {{ MME_LOG }}
   args:
      chdir: "{{ MME_REPO_DIR }}"
      executable: /bin/bash
 
 - name: update S1MME device name 
   replace: 
      path: "/etc/network/interfaces"
      regexp: 'ens6'
      replace: "{{ host_facts.ansible_facts[S1MME_DEV].device }}"
   register:  s1mme_int_id

 - name: up S1MME interface 
   shell: "sudo ifup {{ host_facts.ansible_facts[S1MME_DEV].device }}" 
   args: 
      executable: /bin/bash
   when: s1mme_int_id.changed
